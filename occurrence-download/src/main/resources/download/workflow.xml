<?xml version="1.0" encoding="utf-8"?>
<workflow-app name="${occurrence.environment}-occurrence-download" xmlns="uri:oozie:workflow:0.2">

  <start to="impala-test"/>

  <action name="impala-test">
    <shell xmlns="uri:oozie:shell-action:0.1">
      <job-tracker>${hadoop.jobtracker}</job-tracker>
      <name-node>${hdfs.namenode}</name-node>
      <exec>run-impala.sh</exec>
      <file>hive-scripts/run-impala.sh#run-impala.sh</file>
      <file>hive-scripts/impala.q#impala.q</file>
    </shell>
    <ok to="end" />
    <error to="kill" />
  </action>





  <!-- TODO: interpret the incoming query, and populate WF params for later -->

  <!-- Execute the query using sequential approach -->
  <action name="execute_query">
    <hive xmlns="uri:oozie:hive-action:0.2">
      <job-tracker>${hadoop.jobtracker}</job-tracker>
      <name-node>${hdfs.namenode}</name-node>
      <job-xml>conf/hive-default.xml</job-xml>
      <script>hive-scripts/execute-query.q</script>
      <param>hiveDB=${hiveDB}</param>
      <param>verbatimTable=download_tim_verbatim</param>
      <param>interpretedTable=download_tim_interpreted</param>
      <param>citationTable=download_tim_citation</param>
      <param>multimediaTable=download_tim_multimedia</param>
      <param>whereClause=${whereClause}</param>
    </hive>
    <ok to="end" />
    <error to="kill" />
  </action>

  <!--
    Test what happens when we just run the brute force approach
  -->
  <fork name="queries">
    <path start="query_verbatim" />
    <path start="query_interpreted" />
    <!--path start="query_citation" />
    <path start="query_multimedia"/-->
  </fork>

  <action name="query_verbatim">
    <hive xmlns="uri:oozie:hive-action:0.2">
      <job-tracker>${hadoop.jobtracker}</job-tracker>
      <name-node>${hdfs.namenode}</name-node>
      <job-xml>conf/hive-default.xml</job-xml>
      <script>hive-scripts/execute-verbatim-query.q</script>
      <param>hiveDB=${hiveDB}</param>
      <param>verbatimTable=download_tim_verbatim</param>
      <param>whereClause=${whereClause}</param>
    </hive>
    <ok to="queries_finished" />
    <error to="kill" />
  </action>

  <action name="query_interpreted">
    <hive xmlns="uri:oozie:hive-action:0.2">
      <job-tracker>${hadoop.jobtracker}</job-tracker>
      <name-node>${hdfs.namenode}</name-node>
      <job-xml>conf/hive-default.xml</job-xml>
      <script>hive-scripts/execute-interpreted-query.q</script>
      <param>hiveDB=${hiveDB}</param>
      <param>interpretedTable=download_tim_interpreted</param>
      <param>whereClause=${whereClause}</param>
    </hive>
    <ok to="queries_finished" />
    <error to="kill" />
  </action>

  <action name="query_citation">
    <hive xmlns="uri:oozie:hive-action:0.2">
      <job-tracker>${hadoop.jobtracker}</job-tracker>
      <name-node>${hdfs.namenode}</name-node>
      <job-xml>conf/hive-default.xml</job-xml>
      <script>hive-scripts/execute-citation-query.q</script>
      <param>hiveDB=${hiveDB}</param>
      <param>citationTable=download_tim_citation</param>
      <param>whereClause=${whereClause}</param>
    </hive>
    <ok to="queries_finished" />
    <error to="kill" />
  </action>

  <action name="query_multimedia">
    <hive xmlns="uri:oozie:hive-action:0.2">
      <job-tracker>${hadoop.jobtracker}</job-tracker>
      <name-node>${hdfs.namenode}</name-node>
      <job-xml>conf/hive-default.xml</job-xml>
      <script>hive-scripts/execute-multimedia-query.q</script>
      <param>hiveDB=${hiveDB}</param>
      <param>multimediaTable=download_tim_multimedia</param>
      <param>whereClause=${whereClause}</param>
    </hive>
    <ok to="queries_finished" />
    <error to="kill" />
  </action>

  <join name="queries_finished" to="end"/>


  <kill name="kill">
    <message>Occurrence download failed:[${wf:errorMessage(wf:lastErrorNode())}]</message>
  </kill>

  <end name="end" />

</workflow-app>
