DROP TABLE IF EXISTS src_migration_occurrence_tmp;
CREATE EXTERNAL TABLE src_migration_occurrence_tmp(
key INT,
institution_code STRING,
collection_code STRING,
catalogue_number STRING,
scientific_name STRING,
author STRING,
rank STRING,
kingdom STRING,
phylum STRING,
class_rank STRING,
order_rank STRING,
family STRING,
genus STRING,
species STRING,
subspecies STRING,
latitude STRING,
longitude STRING,
lat_lng_precision STRING,
max_altitude STRING,
min_altitude STRING,
min_depth STRING,
max_depth STRING,
continent_ocean STRING,
state_province STRING,
county STRING,
country STRING,
collector_name STRING,
locality STRING,
year STRING,
month STRING,
day STRING,
event_date STRING,
basis_of_record STRING,
identifier_name STRING,
identification_date STRING,
unit_qualifier STRING,
created BIGINT,
modified BIGINT,

dataset_key STRING,
xml STRING,
xml_hash STRING,
xml_schema STRING,
dwc_occurrence_id STRING,
harvested_date BIGINT,
crawl_id INT,
protocol STRING,
pub_country STRING,
pub_org_key STRING)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES ("hbase.columns.mapping" = "
:key,
o:ic,
o:cc,
o:cn,
o:sn,
o:a,
o:r,
o:k,
o:p,
o:c,
o:o,
o:f,
o:g,
o:s,
o:ss,
o:lat,
o:lng,
o:llp,
o:maxa,
o:mina,
o:mind,
o:maxd,
o:co,
o:sp,
o:cty,
o:ctry,
o:coln,
o:loc,
o:y,
o:m,
o:d,
o:od,
o:bor,
o:idn,
o:idd,
o:uq,
o:crtd,
o:mod,
o:dk,
o:x,
o:xh,
o:xs,
o:doi,
o:hd,
o:ci,
o:pr,
o:hc,
o:ook")
TBLPROPERTIES ("hbase.table.name" = "${hbase_src_table}", "hbase.table.default.storage.type" = "binary");
